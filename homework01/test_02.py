import copy
import unittest
import testlib
import json
from ddt import file_data, ddt, data, unpack
import random

import program02 as program

@ddt
class Test(testlib.TestCase):

    def do_test(self, accese, N, expected):
        '''Implementazione del test:
            - accese:   lista degli indici delle lampadine accese (da 1 a N compreso)
            - N:        numero totale di lampadine (da 1 a N comprese)
            - expected: lista di lampadine da accendere in ordine crescente
        '''
        accese_set = set(accese)
        accese_bis = copy.deepcopy(accese_set)
        ris = program.es2(N, accese_bis)
        self.check(type(ris),   list,       None, "Il risultato non è una lista")
        allint = all(map(lambda x: isinstance(x,int), ris))
        self.check(allint,      True,       None, "Il risultato non è una lista di interi")
        allint = all(map(lambda x: 1 <= x <= N, ris))
        self.check(allint,      True,       None, "Il risultato non è una lista di interi tra 1 e N")
        ordinata = sorted(ris)
        self.check(ris,         ordinata,   None, "Le lampadine da accendere non sono ordinate in ordine crescente")
        self.check(ris,         expected,   None, "non viene restituita la lista corretta")
        self.check(accese_bis,  accese_set, None, "l'insieme accese non deve essere modificato")
        return 1

    @file_data('test_02.json')
    def test_che_legge_i_dati_dal_file_json(self, accese, N, expected):
        '''versione che prende gli input da file json'''
        return self.do_test(accese, N, expected)

    # CASI LIMITE
    @data(10000)
    def test_N_lampadine_tutte_accese(self, N):
        '''N lampadine tutte accese'''
        accese = list(range(1,N+1))
        expected = []
        return self.do_test(accese, N, expected)

    def _test_una_spenta(self):
        '''Una sola lampadina spenta'''
        N = 1
        accese = []
        expected = [1]
        return self.do_test(accese, N, expected)

    @data(8000, 10000)
    def test_lampadine_tutte_accese_tranne_quelle_a_indici_primi(self, N):
        '''Solo lampadine a posizioni prime spente'''
        primi = []
        i = 0
        L = len(self.primi10000)
        while i<L and self.primi10000[i] <= N:
            primi.append(self.primi10000[i])
            i += 1
        accese = [ x for x in range(1,N+1) if x not in primi ]
        expected = [1] if len(primi) % 2 else []
        expected += copy.deepcopy(primi)
        return self.do_test(accese, N, expected)

    @data(10000)
    def test_N_lampadine_di_cui_spente_solo_i_divisori_di_N(self, N):
        accese = { x for x in range(1, N+1) if N%x }
        expected = [N]
        return self.do_test(accese, N, expected)

#    def test_segreto_random_1000(self):
#        N = 1000
#        accese = []
#        for _ in range(N//2):
#            X = random.randint(1,N)
#            if X not in accese:
#                accese.append(X)
#        print(accese)
#        accese = set(accese)
#        expected = []
#        return self.do_test(accese, N, expected)

    def test_segreto_500_a_caso_su_1000(self):
        N = 1000
        accese = {533, 683, 605, 375, 707, 316, 360, 748, 641, 809, 414, 997, 621, 597, 408, 696, 505, 456, 886, 277,
                  682, 996, 372, 745, 832, 949, 945, 978, 712, 37, 157, 846, 463, 386, 555, 578, 561, 76, 837, 192, 751,
                  16, 613, 246, 793, 476, 828, 551, 929, 718, 154, 466, 693, 481, 45, 478, 144, 148, 649, 404, 739, 261,
                  51, 193, 587, 509, 628, 271, 857, 474, 332, 589, 799, 655, 285, 180, 133, 153, 344, 333, 912, 393,
                  431, 267, 808, 92, 429, 199, 642, 887, 833, 4, 673, 500, 656, 547, 34, 43, 107, 70, 222, 512, 217,
                  582, 958, 19, 888, 38, 524, 464, 503, 160, 501, 225, 782, 130, 636, 720, 648, 966, 368, 276, 933, 265,
                  583, 859, 134, 814, 877, 305, 736, 831, 558, 435, 606, 440, 995, 97, 146, 585, 862, 237, 625, 176,
                  897, 103, 356, 174, 934, 504, 581, 412, 549, 882, 804, 479, 120, 31, 668, 640, 342, 852, 258, 741,
                  849, 234, 335, 35, 430, 915, 803, 138, 313, 685, 706, 26, 383, 680, 704, 273, 44, 651, 151, 394, 143,
                  699, 39, 848, 634, 909, 988, 396, 457, 373, 249, 198, 337, 275, 635, 59, 517, 658, 347, 437, 955, 715,
                  944, 126, 681, 784, 348, 6, 759, 767, 788, 338, 797, 703, 236, 376, 851, 245, 119, 413, 552, 50, 894,
                  911, 163, 639, 530, 844, 18, 296, 89, 141, 534, 967, 473, 514, 687, 438, 109, 233, 85, 329, 542, 540,
                  149, 385, 977, 161, 339, 95, 179, 123, 620, 295, 495, 774, 892, 893, 410, 584, 968, 257, 763, 152, 21,
                  289, 200, 307, 726, 729, 610, 836, 843, 79, 863, 744, 301, 867, 735, 664, 878, 608, 170, 427, 102,
                  725, 754, 195, 724, 756, 522, 975, 771, 223, 269, 783, 895, 916, 321, 323, 957, 932, 36, 93, 349, 72,
                  304, 218, 778, 302, 354, 214, 480, 343, 98, 328, 923, 818, 443, 730, 777, 185, 595, 221, 599, 99, 822,
                  483, 588, 274, 318, 657, 913, 716, 140, 614, 697, 303, 475, 567, 881, 183, 169, 562, 205, 986, 488,
                  254, 467, 616, 186, 94, 907, 215, 713, 984, 320, 820, 856, 757, 73, 194, 753, 800, 568, 470, 411, 815,
                  58, 515, 71, 910, 942, 622, 293, 136, 638, 557, 541, 755, 68, 264, 298, 709, 124, 406, 499, 299, 593}
        expected = [1, 4, 7, 8, 10, 11, 12, 13, 14, 15, 17, 21, 22, 26, 27, 28, 29, 34, 38, 46, 48, 50, 57, 58, 59, 61,
                    63, 70, 73, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 91, 93, 96, 98, 99, 100, 102, 105, 106, 108,
                    109, 112, 113, 114, 119, 120, 122, 126, 128, 133, 135, 136, 138, 140, 142, 144, 145, 147, 149, 150,
                    152, 155, 156, 157, 158, 160, 162, 166, 167, 168, 170, 171, 172, 174, 176, 177, 180, 182, 183, 186,
                    187, 188, 191, 192, 195, 196, 197, 199, 200, 201, 202, 205, 207, 208, 209, 210, 211, 214, 215, 217,
                    219, 224, 226, 230, 232, 237, 240, 241, 245, 252, 255, 258, 260, 263, 265, 266, 267, 271, 272, 274,
                    277, 278, 279, 280, 281, 284, 286, 287, 288, 290, 294, 296, 297, 298, 299, 300, 306, 307, 309, 311,
                    312, 314, 318, 319, 320, 321, 327, 329, 330, 331, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344,
                    347, 349, 352, 353, 354, 358, 359, 362, 363, 365, 373, 374, 375, 376, 377, 378, 383, 385, 386, 387,
                    389, 391, 392, 393, 396, 400, 402, 406, 407, 408, 409, 412, 413, 416, 418, 422, 423, 424, 426, 427,
                    428, 429, 430, 435, 437, 438, 439, 440, 441, 444, 446, 447, 455, 457, 458, 463, 464, 470, 471, 472,
                    473, 474, 475, 476, 478, 480, 481, 484, 488, 489, 492, 493, 494, 495, 498, 499, 500, 502, 506, 507,
                    508, 510, 511, 513, 516, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 535, 536, 537,
                    538, 539, 543, 544, 545, 546, 548, 550, 553, 554, 556, 559, 560, 563, 564, 565, 566, 569, 570, 571,
                    572, 573, 574, 575, 576, 577, 579, 580, 586, 590, 591, 592, 594, 596, 598, 600, 601, 602, 603, 604,
                    607, 609, 611, 612, 615, 617, 618, 619, 623, 624, 626, 627, 629, 630, 631, 632, 633, 637, 643, 644,
                    645, 646, 647, 650, 652, 653, 654, 659, 660, 661, 662, 663, 665, 666, 667, 669, 670, 671, 672, 674,
                    675, 676, 677, 678, 679, 684, 686, 688, 689, 690, 691, 692, 694, 695, 698, 700, 701, 702, 705, 708,
                    710, 711, 714, 717, 719, 721, 722, 723, 727, 728, 731, 732, 733, 734, 737, 738, 740, 742, 743, 746,
                    747, 749, 750, 752, 758, 760, 761, 762, 764, 765, 766, 768, 769, 770, 772, 773, 775, 776, 779, 780,
                    781, 785, 786, 787, 789, 790, 791, 792, 794, 795, 796, 798, 801, 802, 805, 806, 807, 810, 811, 812,
                    813, 816, 817, 819, 821, 823, 824, 825, 826, 827, 829, 830, 834, 835, 838, 839, 840, 841, 842, 845,
                    847, 850, 853, 854, 855, 858, 860, 861, 864, 865, 866, 868, 869, 870, 871, 872, 873, 874, 875, 876,
                    879, 880, 883, 884, 885, 889, 890, 891, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 914,
                    917, 918, 919, 920, 921, 922, 924, 925, 926, 927, 928, 930, 931, 935, 936, 937, 938, 939, 940, 941,
                    943, 946, 947, 948, 950, 951, 952, 953, 954, 956, 959, 960, 961, 962, 963, 964, 965, 969, 970, 971,
                    972, 973, 974, 976, 979, 980, 981, 982, 983, 985, 987, 989, 990, 991, 992, 993, 994, 998, 999, 1000]
        return self.do_test(accese, N, expected)


    primi10000 = [  2, 3, 5, 7, 11, 13, 17, 19, 23, 29,
                    31, 37, 41, 43, 47, 53, 59, 61, 67, 71,
                    73, 79, 83, 89, 97, 101, 103, 107, 109, 113,
                    127, 131, 137, 139, 149, 151, 157, 163, 167, 173,
                    179, 181, 191, 193, 197, 199, 211, 223, 227, 229,
                    233, 239, 241, 251, 257, 263, 269, 271, 277, 281,
                    283, 293, 307, 311, 313, 317, 331, 337, 347, 349,
                    353, 359, 367, 373, 379, 383, 389, 397, 401, 409,
                    419, 421, 431, 433, 439, 443, 449, 457, 461, 463,
                    467, 479, 487, 491, 499, 503, 509, 521, 523, 541,
                    547, 557, 563, 569, 571, 577, 587, 593, 599, 601,
                    607, 613, 617, 619, 631, 641, 643, 647, 653, 659,
                    661, 673, 677, 683, 691, 701, 709, 719, 727, 733,
                    739, 743, 751, 757, 761, 769, 773, 787, 797, 809,
                    811, 821, 823, 827, 829, 839, 853, 857, 859, 863,
                    877, 881, 883, 887, 907, 911, 919, 929, 937, 941,
                    947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013,
                    1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069,
                    1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151,
                    1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213, 1217, 1223,
                    1229, 1231, 1237, 1249, 1259, 1277, 1279, 1283, 1289, 1291,
                    1297, 1301, 1303, 1307, 1319, 1321, 1327, 1361, 1367, 1373,
                    1381, 1399, 1409, 1423, 1427, 1429, 1433, 1439, 1447, 1451,
                    1453, 1459, 1471, 1481, 1483, 1487, 1489, 1493, 1499, 1511,
                    1523, 1531, 1543, 1549, 1553, 1559, 1567, 1571, 1579, 1583,
                    1597, 1601, 1607, 1609, 1613, 1619, 1621, 1627, 1637, 1657,
                    1663, 1667, 1669, 1693, 1697, 1699, 1709, 1721, 1723, 1733,
                    1741, 1747, 1753, 1759, 1777, 1783, 1787, 1789, 1801, 1811,
                    1823, 1831, 1847, 1861, 1867, 1871, 1873, 1877, 1879, 1889,
                    1901, 1907, 1913, 1931, 1933, 1949, 1951, 1973, 1979, 1987,
                    1993, 1997, 1999, 2003, 2011, 2017, 2027, 2029, 2039, 2053,
                    2063, 2069, 2081, 2083, 2087, 2089, 2099, 2111, 2113, 2129,
                    2131, 2137, 2141, 2143, 2153, 2161, 2179, 2203, 2207, 2213,
                    2221, 2237, 2239, 2243, 2251, 2267, 2269, 2273, 2281, 2287,
                    2293, 2297, 2309, 2311, 2333, 2339, 2341, 2347, 2351, 2357,
                    2371, 2377, 2381, 2383, 2389, 2393, 2399, 2411, 2417, 2423,
                    2437, 2441, 2447, 2459, 2467, 2473, 2477, 2503, 2521, 2531,
                    2539, 2543, 2549, 2551, 2557, 2579, 2591, 2593, 2609, 2617,
                    2621, 2633, 2647, 2657, 2659, 2663, 2671, 2677, 2683, 2687,
                    2689, 2693, 2699, 2707, 2711, 2713, 2719, 2729, 2731, 2741,
                    2749, 2753, 2767, 2777, 2789, 2791, 2797, 2801, 2803, 2819,
                    2833, 2837, 2843, 2851, 2857, 2861, 2879, 2887, 2897, 2903,
                    2909, 2917, 2927, 2939, 2953, 2957, 2963, 2969, 2971, 2999,
                    3001, 3011, 3019, 3023, 3037, 3041, 3049, 3061, 3067, 3079,
                    3083, 3089, 3109, 3119, 3121, 3137, 3163, 3167, 3169, 3181,
                    3187, 3191, 3203, 3209, 3217, 3221, 3229, 3251, 3253, 3257,
                    3259, 3271, 3299, 3301, 3307, 3313, 3319, 3323, 3329, 3331,
                    3343, 3347, 3359, 3361, 3371, 3373, 3389, 3391, 3407, 3413,
                    3433, 3449, 3457, 3461, 3463, 3467, 3469, 3491, 3499, 3511,
                    3517, 3527, 3529, 3533, 3539, 3541, 3547, 3557, 3559, 3571,
                    3581, 3583, 3593, 3607, 3613, 3617, 3623, 3631, 3637, 3643,
                    3659, 3671, 3673, 3677, 3691, 3697, 3701, 3709, 3719, 3727,
                    3733, 3739, 3761, 3767, 3769, 3779, 3793, 3797, 3803, 3821,
                    3823, 3833, 3847, 3851, 3853, 3863, 3877, 3881, 3889, 3907,
                    3911, 3917, 3919, 3923, 3929, 3931, 3943, 3947, 3967, 3989,
                    4001, 4003, 4007, 4013, 4019, 4021, 4027, 4049, 4051, 4057,
                    4073, 4079, 4091, 4093, 4099, 4111, 4127, 4129, 4133, 4139,
                    4153, 4157, 4159, 4177, 4201, 4211, 4217, 4219, 4229, 4231,
                    4241, 4243, 4253, 4259, 4261, 4271, 4273, 4283, 4289, 4297,
                    4327, 4337, 4339, 4349, 4357, 4363, 4373, 4391, 4397, 4409,
                    4421, 4423, 4441, 4447, 4451, 4457, 4463, 4481, 4483, 4493,
                    4507, 4513, 4517, 4519, 4523, 4547, 4549, 4561, 4567, 4583,
                    4591, 4597, 4603, 4621, 4637, 4639, 4643, 4649, 4651, 4657,
                    4663, 4673, 4679, 4691, 4703, 4721, 4723, 4729, 4733, 4751,
                    4759, 4783, 4787, 4789, 4793, 4799, 4801, 4813, 4817, 4831,
                    4861, 4871, 4877, 4889, 4903, 4909, 4919, 4931, 4933, 4937,
                    4943, 4951, 4957, 4967, 4969, 4973, 4987, 4993, 4999, 5003,
                    5009, 5011, 5021, 5023, 5039, 5051, 5059, 5077, 5081, 5087,
                    5099, 5101, 5107, 5113, 5119, 5147, 5153, 5167, 5171, 5179,
                    5189, 5197, 5209, 5227, 5231, 5233, 5237, 5261, 5273, 5279,
                    5281, 5297, 5303, 5309, 5323, 5333, 5347, 5351, 5381, 5387,
                    5393, 5399, 5407, 5413, 5417, 5419, 5431, 5437, 5441, 5443,
                    5449, 5471, 5477, 5479, 5483, 5501, 5503, 5507, 5519, 5521,
                    5527, 5531, 5557, 5563, 5569, 5573, 5581, 5591, 5623, 5639,
                    5641, 5647, 5651, 5653, 5657, 5659, 5669, 5683, 5689, 5693,
                    5701, 5711, 5717, 5737, 5741, 5743, 5749, 5779, 5783, 5791,
                    5801, 5807, 5813, 5821, 5827, 5839, 5843, 5849, 5851, 5857,
                    5861, 5867, 5869, 5879, 5881, 5897, 5903, 5923, 5927, 5939,
                    5953, 5981, 5987, 6007, 6011, 6029, 6037, 6043, 6047, 6053,
                    6067, 6073, 6079, 6089, 6091, 6101, 6113, 6121, 6131, 6133,
                    6143, 6151, 6163, 6173, 6197, 6199, 6203, 6211, 6217, 6221,
                    6229, 6247, 6257, 6263, 6269, 6271, 6277, 6287, 6299, 6301,
                    6311, 6317, 6323, 6329, 6337, 6343, 6353, 6359, 6361, 6367,
                    6373, 6379, 6389, 6397, 6421, 6427, 6449, 6451, 6469, 6473,
                    6481, 6491, 6521, 6529, 6547, 6551, 6553, 6563, 6569, 6571,
                    6577, 6581, 6599, 6607, 6619, 6637, 6653, 6659, 6661, 6673,
                    6679, 6689, 6691, 6701, 6703, 6709, 6719, 6733, 6737, 6761,
                    6763, 6779, 6781, 6791, 6793, 6803, 6823, 6827, 6829, 6833,
                    6841, 6857, 6863, 6869, 6871, 6883, 6899, 6907, 6911, 6917,
                    6947, 6949, 6959, 6961, 6967, 6971, 6977, 6983, 6991, 6997,
                    7001, 7013, 7019, 7027, 7039, 7043, 7057, 7069, 7079, 7103,
                    7109, 7121, 7127, 7129, 7151, 7159, 7177, 7187, 7193, 7207,
                    7211, 7213, 7219, 7229, 7237, 7243, 7247, 7253, 7283, 7297,
                    7307, 7309, 7321, 7331, 7333, 7349, 7351, 7369, 7393, 7411,
                    7417, 7433, 7451, 7457, 7459, 7477, 7481, 7487, 7489, 7499,
                    7507, 7517, 7523, 7529, 7537, 7541, 7547, 7549, 7559, 7561,
                    7573, 7577, 7583, 7589, 7591, 7603, 7607, 7621, 7639, 7643,
                    7649, 7669, 7673, 7681, 7687, 7691, 7699, 7703, 7717, 7723,
                    7727, 7741, 7753, 7757, 7759, 7789, 7793, 7817, 7823, 7829,
                    7841, 7853, 7867, 7873, 7877, 7879, 7883, 7901, 7907, 7919,
                    7927, 7933, 7937, 7949, 7951, 7963, 7993, 8009, 8011, 8017,
                    8039, 8053, 8059, 8069, 8081, 8087, 8089, 8093, 8101, 8111,
                    8117, 8123, 8147, 8161, 8167, 8171, 8179, 8191, 8209, 8219,
                    8221, 8231, 8233, 8237, 8243, 8263, 8269, 8273, 8287, 8291,
                    8293, 8297, 8311, 8317, 8329, 8353, 8363, 8369, 8377, 8387,
                    8389, 8419, 8423, 8429, 8431, 8443, 8447, 8461, 8467, 8501,
                    8513, 8521, 8527, 8537, 8539, 8543, 8563, 8573, 8581, 8597,
                    8599, 8609, 8623, 8627, 8629, 8641, 8647, 8663, 8669, 8677,
                    8681, 8689, 8693, 8699, 8707, 8713, 8719, 8731, 8737, 8741,
                    8747, 8753, 8761, 8779, 8783, 8803, 8807, 8819, 8821, 8831,
                    8837, 8839, 8849, 8861, 8863, 8867, 8887, 8893, 8923, 8929,
                    8933, 8941, 8951, 8963, 8969, 8971, 8999, 9001, 9007, 9011,
                    9013, 9029, 9041, 9043, 9049, 9059, 9067, 9091, 9103, 9109,
                    9127, 9133, 9137, 9151, 9157, 9161, 9173, 9181, 9187, 9199,
                    9203, 9209, 9221, 9227, 9239, 9241, 9257, 9277, 9281, 9283,
                    9293, 9311, 9319, 9323, 9337, 9341, 9343, 9349, 9371, 9377,
                    9391, 9397, 9403, 9413, 9419, 9421, 9431, 9433, 9437, 9439,
                    9461, 9463, 9467, 9473, 9479, 9491, 9497, 9511, 9521, 9533,
                    9539, 9547, 9551, 9587, 9601, 9613, 9619, 9623, 9629, 9631,
                    9643, 9649, 9661, 9677, 9679, 9689, 9697, 9719, 9721, 9733,
                    9739, 9743, 9749, 9767, 9769, 9781, 9787, 9791, 9803, 9811,
                    9817, 9829, 9833, 9839, 9851, 9857, 9859, 9871, 9883, 9887,
                    9901, 9907, 9923, 9929, 9931, 9941, 9949, 9967, 9973 ]

if __name__ == '__main__':
    Test.main()

